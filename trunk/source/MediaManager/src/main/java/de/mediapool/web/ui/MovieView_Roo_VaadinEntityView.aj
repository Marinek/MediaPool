// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package de.mediapool.web.ui;

import com.vaadin.data.Item;
import com.vaadin.data.util.BeanContainer;
import com.vaadin.data.util.BeanItem;
import com.vaadin.ui.Table;
import de.mediapool.web.EntityTableColumnGenerator;
import entity.Movie;
import java.lang.Class;
import java.lang.Long;
import java.lang.Object;
import java.lang.String;
import java.util.List;

privileged aspect MovieView_Roo_VaadinEntityView {
    
    public String MovieView.getEntityName() {
        return "Movie";
    }
    
    public Class<Movie> MovieView.getEntityClass() {
        return Movie.class;
    }
    
    public boolean MovieView.isCreateAllowed() {
        return true;
    }
    
    public boolean MovieView.isUpdateAllowed() {
        return true;
    }
    
    public boolean MovieView.isDeleteAllowed() {
        return true;
    }
    
    public List<Movie> MovieView.listEntities() {
        List<Movie> list = Movie.findAllMovies();
        return list;
    }
    
    public Movie MovieView.saveEntity(Movie entity) {
        if (entity == null) {
            return null;
        }
        return (Movie) entity.merge();
    }
    
    public void MovieView.deleteEntity(Movie entity) {
        if (entity != null) {
            entity.remove();
        }
    }
    
    public boolean MovieView.isNewEntity(Movie entity) {
        return (entity != null && getIdForEntity(entity) == null);
    }
    
    public String MovieView.getIdProperty() {
        return "id";
    }
    
    public String MovieView.getVersionProperty() {
        return "version";
    }
    
    public Movie MovieView.createEntityInstance() {
        return new Movie();
    }
    
    public BeanContainer<Long, Movie> MovieView.getTableContainer() {
        BeanContainer<Long, Movie> container = new BeanContainer<Long, Movie>(Movie.class);
        container.setBeanIdProperty("id");
        for (Movie entity : Movie.findAllMovies()) {
            container.addBean(entity);
        }
        return container;
    }
    
    public Item MovieView.getItemForEntity(Movie entity) {
        Item item = getTable().getItem(entity.getId());
        if (item == null) {
            item = new BeanItem<Movie>(entity);
        }
        return item;
    }
    
    public Movie MovieView.getEntityForItem(Item item) {
        if (item != null) {
            return ((BeanItem<Movie>) item).getBean();
        } else {
            return null;
        }
    }
    
    public Object MovieView.getIdForEntity(Movie entity) {
        return entity != null ? entity.getId() : null;
    }
    
    public void MovieView.setupGeneratedColumns(Table table) {
        table.removeGeneratedColumn("mlanguage");
        table.addGeneratedColumn("mlanguage", new EntityTableColumnGenerator((String) getMLanguageCaptionPropertyId()));
        table.removeGeneratedColumn("award");
        table.addGeneratedColumn("award", new EntityTableColumnGenerator((String) getAwardCaptionPropertyId()));
        table.removeGeneratedColumn("participation");
        table.addGeneratedColumn("participation", new EntityTableColumnGenerator((String) getParticipationCaptionPropertyId()));
    }
    
    public Object MovieView.getMLanguageCaptionPropertyId() {
        return null;
    }
    
    public Object MovieView.getAwardCaptionPropertyId() {
        return null;
    }
    
    public Object MovieView.getParticipationCaptionPropertyId() {
        return null;
    }
    
}
