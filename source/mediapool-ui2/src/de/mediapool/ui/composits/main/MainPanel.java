package de.mediapool.ui.composits.main;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Accordion;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalSplitPanel;
import com.vaadin.ui.Label;

import de.mediapool.ui.composits.navigation.components.MediaNavigationTree;

public class MainPanel extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private HorizontalSplitPanel mainSplitPanel;
	@AutoGenerated
	private Accordion menueAccordion;

	// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	// Statische Deklarationen
	// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 */
	public MainPanel() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		menueAccordion.setSizeFull();

		Label l2 = new Label("There are no saved notes.");
		Label l3 = new Label("There are currently no issues.");

		menueAccordion.addTab(new MediaNavigationTree(), "Media Kategorien", null);

		menueAccordion.addTab(l2, "Notes", null);
		menueAccordion.addTab(l3, "Issues", null);

		this.mainSplitPanel.setSplitPosition(25, Unit.PERCENTAGE);

	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// mainSplitPanel
		mainSplitPanel = buildMainSplitPanel();
		mainLayout.addComponent(mainSplitPanel, "top:0.0px;");

		return mainLayout;
	}

	@AutoGenerated
	private HorizontalSplitPanel buildMainSplitPanel() {
		// common part: create layout
		mainSplitPanel = new HorizontalSplitPanel();
		mainSplitPanel.setImmediate(false);
		mainSplitPanel.setWidth("100.0%");
		mainSplitPanel.setHeight("100.0%");

		// menueAccordion
		menueAccordion = new Accordion();
		menueAccordion.setImmediate(false);
		menueAccordion.setWidth("-1px");
		menueAccordion.setHeight("-1px");
		mainSplitPanel.addComponent(menueAccordion);

		return mainSplitPanel;
	}

	// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	// Member Variablen
	// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	// Konstruktoren
	// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	// public Methoden
	// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	// protected Methoden
	// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	// private Methoden
	// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

	// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	// abstrakte Methoden
	// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
}
