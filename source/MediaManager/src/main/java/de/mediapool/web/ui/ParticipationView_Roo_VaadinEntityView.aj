// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package de.mediapool.web.ui;

import com.vaadin.data.Item;
import com.vaadin.data.util.BeanContainer;
import com.vaadin.data.util.BeanItem;
import com.vaadin.ui.Table;
import de.mediapool.web.EntityTableColumnGenerator;
import entity.meta.Participation;
import java.lang.Class;
import java.lang.Long;
import java.lang.Object;
import java.lang.String;
import java.util.List;

privileged aspect ParticipationView_Roo_VaadinEntityView {
    
    public String ParticipationView.getEntityName() {
        return "Participation";
    }
    
    public Class<Participation> ParticipationView.getEntityClass() {
        return Participation.class;
    }
    
    public boolean ParticipationView.isCreateAllowed() {
        return true;
    }
    
    public boolean ParticipationView.isUpdateAllowed() {
        return true;
    }
    
    public boolean ParticipationView.isDeleteAllowed() {
        return true;
    }
    
    public List<Participation> ParticipationView.listEntities() {
        List<Participation> list = Participation.findAllParticipations();
        return list;
    }
    
    public Participation ParticipationView.saveEntity(Participation entity) {
        if (entity == null) {
            return null;
        }
        return (Participation) entity.merge();
    }
    
    public void ParticipationView.deleteEntity(Participation entity) {
        if (entity != null) {
            entity.remove();
        }
    }
    
    public boolean ParticipationView.isNewEntity(Participation entity) {
        return (entity != null && getIdForEntity(entity) == null);
    }
    
    public String ParticipationView.getIdProperty() {
        return "id";
    }
    
    public String ParticipationView.getVersionProperty() {
        return "version";
    }
    
    public Participation ParticipationView.createEntityInstance() {
        return new Participation();
    }
    
    public BeanContainer<Long, Participation> ParticipationView.getTableContainer() {
        BeanContainer<Long, Participation> container = new BeanContainer<Long, Participation>(Participation.class);
        container.setBeanIdProperty("id");
        for (Participation entity : Participation.findAllParticipations()) {
            container.addBean(entity);
        }
        return container;
    }
    
    public Item ParticipationView.getItemForEntity(Participation entity) {
        Item item = getTable().getItem(entity.getId());
        if (item == null) {
            item = new BeanItem<Participation>(entity);
        }
        return item;
    }
    
    public Participation ParticipationView.getEntityForItem(Item item) {
        if (item != null) {
            return ((BeanItem<Participation>) item).getBean();
        } else {
            return null;
        }
    }
    
    public Object ParticipationView.getIdForEntity(Participation entity) {
        return entity != null ? entity.getId() : null;
    }
    
    public void ParticipationView.setupGeneratedColumns(Table table) {
        table.removeGeneratedColumn("pmember");
        table.addGeneratedColumn("pmember", new EntityTableColumnGenerator((String) getPMemberCaptionPropertyId()));
    }
    
    public Object ParticipationView.getPMemberCaptionPropertyId() {
        return "name";
    }
    
}
