// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package de.mediapool.grab.web.ui;

import com.vaadin.data.Item;
import com.vaadin.data.util.BeanContainer;
import com.vaadin.data.util.BeanItem;
import com.vaadin.ui.Table;
import de.mediapool.grab.domain.Cooperation;
import de.mediapool.grab.web.EntityTableColumnGenerator;
import java.lang.Class;
import java.lang.Long;
import java.lang.Object;
import java.lang.String;
import java.util.List;

privileged aspect CooperationView_Roo_VaadinEntityView {
    
    public String CooperationView.getEntityName() {
        return "Cooperation";
    }
    
    public Class<Cooperation> CooperationView.getEntityClass() {
        return Cooperation.class;
    }
    
    public boolean CooperationView.isCreateAllowed() {
        return true;
    }
    
    public boolean CooperationView.isUpdateAllowed() {
        return true;
    }
    
    public boolean CooperationView.isDeleteAllowed() {
        return true;
    }
    
    public List<Cooperation> CooperationView.listEntities() {
        List<Cooperation> list = Cooperation.findAllCooperations();
        return list;
    }
    
    public Cooperation CooperationView.saveEntity(Cooperation entity) {
        if (entity == null) {
            return null;
        }
        return (Cooperation) entity.merge();
    }
    
    public void CooperationView.deleteEntity(Cooperation entity) {
        if (entity != null) {
            entity.remove();
        }
    }
    
    public boolean CooperationView.isNewEntity(Cooperation entity) {
        return (entity != null && getIdForEntity(entity) == null);
    }
    
    public String CooperationView.getIdProperty() {
        return "id";
    }
    
    public String CooperationView.getVersionProperty() {
        return "version";
    }
    
    public Cooperation CooperationView.createEntityInstance() {
        return new Cooperation();
    }
    
    public BeanContainer<Long, Cooperation> CooperationView.getTableContainer() {
        BeanContainer<Long, Cooperation> container = new BeanContainer<Long, Cooperation>(Cooperation.class);
        container.setBeanIdProperty("id");
        for (Cooperation entity : Cooperation.findAllCooperations()) {
            container.addBean(entity);
        }
        return container;
    }
    
    public Item CooperationView.getItemForEntity(Cooperation entity) {
        Item item = getTable().getItem(entity.getId());
        if (item == null) {
            item = new BeanItem<Cooperation>(entity);
        }
        return item;
    }
    
    public Cooperation CooperationView.getEntityForItem(Item item) {
        if (item != null) {
            return ((BeanItem<Cooperation>) item).getBean();
        } else {
            return null;
        }
    }
    
    public Object CooperationView.getIdForEntity(Cooperation entity) {
        return entity != null ? entity.getId() : null;
    }
    
    public void CooperationView.setupGeneratedColumns(Table table) {
        table.removeGeneratedColumn("person");
        table.addGeneratedColumn("person", new EntityTableColumnGenerator((String) getPersonCaptionPropertyId()));
    }
    
    public Object CooperationView.getPersonCaptionPropertyId() {
        return "name";
    }
    
}
